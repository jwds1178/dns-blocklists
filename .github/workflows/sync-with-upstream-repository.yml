name: Sync with Upstream Repository

on:
  schedule:
    - cron: '0 */1 * * *'
  workflow_dispatch:

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 10000

      - name: Configure git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Add upstream remote
        run: |
          git remote add upstream https://github.com/hagezi/dns-blocklists.git
          git fetch upstream

      - name: Store locally deleted files
        run: |
          # Create a list of files that exist in upstream but not in our fork
          git diff --name-status upstream/main...HEAD | grep '^D' | cut -f2 > .deleted-files || true

          if [ -s .deleted-files ]; then
            echo "Files deleted in fork:"
            cat .deleted-files
          fi

      - name: Merge upstream changes
        run: |
          git checkout main

          # Merge upstream changes
          git merge upstream/main --no-edit --allow-unrelated-histories || {
            # If merge fails, try to resolve
            echo "Merge conflict detected, attempting resolution..."
            git status
          }

      - name: Restore deleted files
        run: |
          # Remove files that were deleted in our fork but added back by merge
          if [ -f .deleted-files ]; then
            while IFS= read -r file; do
              if [ -f "$file" ]; then
                echo "Removing re-added file: $file"
                git rm -f "$file" 2>/dev/null || true
              fi
            done < .deleted-files

            # Stage the deletions
            if ! git diff --staged --quiet; then
              git commit -m "Preserve local deletions after upstream merge"
            fi
          fi

          # Clean up
          rm -f .deleted-files

      - name: Push changes
        run: |
          git push origin main
